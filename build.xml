<?xml version="1.0" encoding="utf-8"?>
<!-- build.xml file used with ant-->

<project name="alerts" default="dist" basedir=".">
  <!-- variables -->
  <property name="app.name"      value="alerts"/>
  <property name="app.version"   value="0.1"/>
  <property name="src.home"      value="src"/>
  <property name="lib"      value="lib"/>

  <property name="build.home"       value="bin"/>
  <property name="dist.home"       value="dist"/>


  <!-- All Target -->

  <target name="all" depends="clean,compile"
    description="Clean build and dist, then compile"/>
    
  <path id="classpath">
    <pathelement location="${build}"/>

    <fileset dir="${lib}/">
      <include name="*.jar"/>
    </fileset>
  </path>

  <!-- Clean Target -->

  <target name="clean"
    description="Delete old build and dist directories">
    <delete dir="${build.home}"/>
    <delete dir="${dist.home}"/>
  </target>


  <!-- Javac Target -->
  <target name="javac" depends="prepare"
    description="Compile Java sources">

    <!-- Compile Java classes as necessary -->
    <mkdir dir="${build.home}"/>
    <javac srcdir="${src.home}"
      destdir="${build.home}" >
      <classpath refid="classpath"/>
      	
    </javac>
  </target>
	
  <target name="javac15" depends="prepare"
		description="Compile Java sources">

	    <!-- Compile Java classes as necessary -->
	    <mkdir dir="${build.home}"/>
	    <javac srcdir="${src.home}"
	      destdir="${build.home}"  target="1.5">
	      <classpath refid="classpath"/>
	      	
	    </javac>
	  	<copy file="${src.home}/org/semanticweb/yars/tld/tld.dat" tofile="${build.home}/org/semanticweb/yars/tld/tld.dat"> </copy>
	  </target>

  <!-- Compile Target -->
  <target name="compile" depends="javac"/>
	<target name="compile15" depends="javac15"/>

  <!-- Prepare Target -->
  <target name="prepare">
    <!-- Create build directory -->
    <mkdir  dir="${build.home}"/>
    <mkdir  dir="${dist.home}"/>
  </target>


  <!-- Dist Target builds all mediators -->
  <target name="dist" depends="compile">
    <jar jarfile="${dist.home}/${app.name}.jar"
	 basedir="${build.home}">
	    <zipfileset src="${lib}/commons-cli-1.1.jar"/>
	    <zipfileset src="${lib}/commons-httpclient-3.1.jar"/>
    	<zipfileset src="${lib}/yars2.1-trunk.jar"/>
    	<zipfileset src="${lib}/nxparser.jar"/>
      <manifest>
	<attribute name="Main-Class" value="org.semanticweb.yars2.alerts.cli.Main"/>
      </manifest>
      </jar>
  </target>
	
	 <target name="dist15" depends="compile">
	    <jar jarfile="${dist.home}/${app.name}.jar"
		 basedir="${build.home}">
		    <zipfileset src="${lib}/commons-cli-1.1.jar"/>
		    <zipfileset src="${lib}/commons-httpclient-3.1.jar"/>
	    	<zipfileset src="${lib}/commons-logging-1.1.1.jar"/>
		    <zipfileset src="${lib}/commons-codec-1.3.jar"/>
	    	
	      <manifest>
		<attribute name="Main-Class" value="org.semanticweb.yars.nx.cli.Main"/>
	      </manifest>
	      </jar>
	  </target>

  <target name="javadoc" depends="prepare">
    <javadoc destdir="${javadoc}" author="true" version="true">
      <fileset dir="${src.home}" />
    </javadoc>
  </target>
	
	<target name="war" depends="dist">
			<!-- The jars are in different subdirectories, we must flatten them all into
			     one directory for the WAR file. So we copy them all into a temporary
			     directory before building the WAR. -->
			<copy todir="${build.lib}" flatten="true">
				<fileset dir=".">
					<include name="${lib}/*.jar"/>
					<include name="${lib}/**/*.jar"/>
					<exclude name="${junit.jar}"/>
					<exclude name="${lib}/jetty-*/**"/>
				</fileset>
			</copy>
			<war destfile="${war}" needxmlfile="false">
				<fileset dir="webapp/">
					<include name="**"/>
					<exclude name="WEB-INF"/>
				</fileset>
				<lib dir="${build.lib}" includes="*.jar"/>
				<webinf dir="webapp/WEB-INF">
					<include name="*"/>
				</webinf>
			</war>
		</target> 
</project>
